@page "/SearchProduct"
@inject NavigationManager NavigationManager
@inject IHttpClientFactory ClientFactory

<MudContainer>
    <MudText Typo="Typo.h4" Style="margin-bottom: 20px;">
        Kết quả tìm kiếm cho: <b>@((MarkupString)searchQuery)</b>
    </MudText>

    <MudList T="Product" Class="mud-elevation-2">
        @if (FilteredProducts.Any())
        {
            @foreach (var product in FilteredProducts)
            {
                <MudListItem Class="product-item" Style="display: flex; align-items: center; padding: 10px;">
                    <!-- Ảnh sản phẩm -->
                    <MudAvatar Size="Size.Large" Image="@product.Img" Alt="Ảnh sản phẩm"
                               Class="product-image" Style="margin-right: 10px;" />

                    <!-- Thông tin sản phẩm -->
                    <div Style="flex-grow: 1;">
                        <MudText Typo="Typo.subtitle1" Class="product-name">
                            <MudNavLink OnClick="() => NavigateToDetail(product.ProductId)"
                                        Style="text-decoration: none; color: inherit;">
                                @product.ProductName
                            </MudNavLink>
                        </MudText>

                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            📖 Tác giả: <b>@product.Author</b>
                        </MudText>

                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            🏢 Nhà xuất bản: <b>@product.Publisher</b>
                        </MudText>
                    </div>

                    <!-- Button Xem chi tiết -->
                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                               OnClick="() => NavigateToDetail(product.ProductId)">
                        Xem chi tiết
                    </MudButton>
                </MudListItem>
                <MudDivider />
            }
        }
        else
        {
            <MudText Class="no-result" Style="padding: 10px; text-align: center;">
                ❌ Không tìm thấy sản phẩm nào.
            </MudText>
        }
    </MudList>

    <!-- Hiển thị danh sách sản phẩm liên quan nếu có -->
    @if (AdditionalProducts.Any())
    {
        <MudText Typo="Typo.h5" Style="margin-top: 30px;">
            🔍 Sản phẩm liên quan:
        </MudText>

        <MudList T="Product" Class="mud-elevation-2">
            @foreach (var product in AdditionalProducts)
            {
                <MudListItem Class="product-item" Style="display: flex; align-items: center; padding: 10px;">
                    <MudAvatar Size="Size.Large" Image="@product.Img" Alt="Ảnh sản phẩm"
                               Class="product-image" Style="margin-right: 10px;" />

                    <div Style="flex-grow: 1;">
                        <MudText Typo="Typo.subtitle1" Class="product-name">
                            <MudNavLink OnClick="() => NavigateToDetail(product.ProductId)"
                                        Style="text-decoration: none; color: inherit;">
                                @product.ProductName
                            </MudNavLink>
                        </MudText>

                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            📖 Tác giả: <b>@product.Author</b>
                        </MudText>

                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            🏢 Nhà xuất bản: <b>@product.Publisher</b>
                        </MudText>
                    </div>

                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                               OnClick="() => NavigateToDetail(product.ProductId)">
                        Xem chi tiết
                    </MudButton>
                </MudListItem>
                <MudDivider />
            }
        </MudList>
    }
</MudContainer>

@code {
    private List<Product> FilteredProducts = new();
    private List<Product> AdditionalProducts = new();
    private string searchQuery = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Lấy giá trị query string từ URL
        var uri = new Uri(NavigationManager.Uri);
        var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);
        searchQuery = queryParams["query"] ?? string.Empty;

        if (!string.IsNullOrWhiteSpace(searchQuery))
        {
            await SearchProductsAsync();
        }
    }

    private async Task SearchProductsAsync()
    {
        var httpClient = ClientFactory.CreateClient("API");

        // Gửi request API để lấy danh sách sản phẩm theo searchQuery
        var result = await httpClient.GetFromJsonAsync<List<Product>>(
            $"api/search/search-product?searchQuery={searchQuery}");

        FilteredProducts = result ?? new();

        if (FilteredProducts.Any())
        {
            // Xác định loại kết quả trùng khớp
            var matchingPublisher = FilteredProducts.FirstOrDefault(p =>
                p.Publisher.Contains(searchQuery, StringComparison.OrdinalIgnoreCase));

            var matchingAuthor = FilteredProducts.FirstOrDefault(p =>
                p.Author.Contains(searchQuery, StringComparison.OrdinalIgnoreCase));

            if (matchingPublisher != null)
            {
                // Tìm các sản phẩm có cùng nhà xuất bản
                AdditionalProducts = await GetAdditionalProducts("publisher", matchingPublisher.Publisher);
            }
            else if (matchingAuthor != null)
            {
                // Tìm các sản phẩm có cùng tác giả
                AdditionalProducts = await GetAdditionalProducts("author", matchingAuthor.Author);
            }
        }
    }

    private async Task<List<Product>> GetAdditionalProducts(string filterType, string filterValue)
    {
        var httpClient = ClientFactory.CreateClient("API");
        return await httpClient.GetFromJsonAsync<List<Product>>(
            $"api/search/search-by-{filterType}?{filterType}={filterValue}") ?? new();
    }

    private void NavigateToDetail(int productId)
    {
        NavigationManager.NavigateTo($"/Detail/{productId}");
    }
}
